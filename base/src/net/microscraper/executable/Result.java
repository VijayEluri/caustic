package net.microscraper.executable;

import net.microscraper.NameValuePair;
import net.microscraper.instruction.Instruction;
import net.microscraper.interfaces.publisher.Publisher;
import net.microscraper.interfaces.publisher.PublisherException;

/**
 * {@link Result}s are {@link NameValuePair}s generated by {@link Executable}s, with the addition of
 * {@link #{@link #publishTo(Publisher)}, {@link #getInstructionNumber()}, and {@link #getUri()}.  
 * @see NameValuePair
 * @author john
 *
 */
public interface Result extends NameValuePair {
	
	/**
	 * 
	 * Publish this {@link Result} to a {@link Publisher}.  Should only be done once.
	 * @param publisher The {@link Publisher} to send this {@link Result} to.
	 * @throws PublisherException If the {@link Publisher experiences an {@link Exception}.
	 * @throws IllegalStateException If the {@link Result} has already been published.
	 * @see {@link Publisher#publishResult}
	 */
	public void publishTo(Publisher publisher) throws PublisherException, IllegalStateException;
	
	/**
	 * 
	 * @return How many times this {@link Result}'s {@link Instruction} had generated {@link Result}s
	 * before this one was generated.
	 */
	public int getInstructionNumber();

	/**
	 * 
	 * @return The {@link Instruction} used for this {@link Result}.
	 */
	public Instruction getInstruction();
	
	/**
	 * 
	 * @return <code>True</code> if {@link #getName()} will return <code>null</code>, <code>false</code> otherwise.
	 */
	public boolean hasName();
}
